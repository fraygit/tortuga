@{
    ViewBag.Title = "DocumentEditor";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
@model tortuga.MongoData.Entities.Model.DocumentSchema

<div class="row">
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading sm">
                <h2>Document Builder </h2>
            </header>
            <div class="panel-body">
                <form role="form">
                    <div class="form-group">
                        <label>Document Name</label>
                        <input type="text" class="form-control" placeholder="Document Name" id="txtDocumentName">
                    </div>

                    <div id="navcontainer">
                        <ul class="root">
                            <li>
                                <div class="document-item">
                                    @Model.Name 
                                </div>
                                <div class="listPanel"></div>
                            </li>
                        </ul>
                    </div>

                    <button type="button" class="btn btn-primary">Add a Field</button>

                </form>
            </div>

            <footer class="panel-footer">
                <button type="button" class="btn btn-theme" id="btn-save">Save Document</button>
                <button type="reset" class="btn">Cancel</button>
            </footer>
        </section>
    </div>
</div>
@section Scripts {
    <script language="javascript">
    var documentSchema = @Html.Raw(Json.Encode(Model));

        $(document).ready(function(){
            $.ajax({
                url: '@Url.Action("ListFields", "Document")',
                data: JSON.stringify(documentSchema),
                contentType: 'application/json',
                type: 'POST',
                dataType: 'HTML'
            }).success(function(result){
                $(".listPanel").html(result);
            });

            $("body").on("click", ".document-item a", function (e) {
                e.preventDefault();
                var fieldGuid = $(this).data("document-guid");

                SearchField("Root", fieldGuid, documentSchema.Fields, function(field, rootName){
                    $("#txtFieldName").val(field.Name);
                    $("#txtRoot").val(rootName);

                    var selectedDataType = GetCurrentDataType(field);
                    $("#dropDataType").val(selectedDataType);
                    $("#FieldDetails").data("field-guid", field.FieldGuid);
                });           

                $("#md-normal").modal('show');
            });

            function GetCurrentDataType(field){
                var selectedDataType;
                switch(field.DataType){
                    case 0:
                        selectedDataType = "String";
                        break;
                    case 1:
                        selectedDataType = "Number";
                        break;
                    case 3:
                        selectedDataType = "Document";
                        break;
                }
                return selectedDataType;
            }

            function SearchField(parentname, fieldGuid, fields, cb){
                var root = parentname;
                $.each(fields, function(index, item){
                    if (item.FieldGuid == fieldGuid)
                    {
                        cb(item, root);
                        return false;
                    }
                    if (item.Fields != null){
                        SearchField(item.Name, fieldGuid, item.Fields, function(d, pr){
                            cb(d, pr);
                            return false;
                        });
                    }

                });                
            }

        });

    </script>
    
}